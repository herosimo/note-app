{"version":3,"sources":["components/navbar/Header.js","components/navbar/RecentNote.js","components/navbar/RecentNotes.js","components/navbar/Navbar.js","components/content/Content.js","components/UI/Alert.js","App.js","index.js"],"names":["Header","addNoteHandler","Fragment","className","type","onClick","RecentNote","noteList","editNoteHandler","activeNoteId","id","title","date","RecentNotes","noteLists","map","key","Navbar","Content","saveNoteHandler","activeNote","deleteNoteHandler","useState","setTitle","note","setNote","useEffect","deleteButton","value","onChange","e","target","time","Date","toString","split","toISOString","replace","autoFocus","Alert","content","messageContent","messageClass","message","open","setOpen","setTimeout","clearTimeout","alert","role","data-dismiss","aria-label","aria-hidden","App","contentBar","saveNoteFunction","noteBar","setNoteBar","setNoteLists","setActiveNote","setActiveNoteId","setAlert","apiUrl","fetch","then","response","json","data","updatedNoteLists","push","reverse","catch","error","notes","method","body","JSON","stringify","headers","noteDetail","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f5d3b4e7.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = ({ addNoteHandler }) => {\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"d-flex justify-content-between align-items-center rounded text-white bg-dark p-3 mb-3\">\r\n                <h5 className=\"m-0\">Simple Note</h5>\r\n                <button type=\"button\" className=\"btn btn-sm btn-success\" onClick={addNoteHandler}>\r\n                    Add Note\r\n                </button>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst RecentNote = ({ noteList, editNoteHandler, activeNoteId }) => {\r\n    // Check if activeItem, then give activeClass\r\n    let className = \"list-group-item text-left note-list\";\r\n    if (activeNoteId === noteList.id) {\r\n        className = \"list-group-item text-left note-list  border-success bg-light\";\r\n    }\r\n\r\n    return (\r\n        <li className={className} onClick={() => editNoteHandler(noteList.id)}>\r\n            <h6 className=\"my-0\">{noteList.title}</h6>\r\n            <small className=\"text-muted\">{noteList.date}</small>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default RecentNote;\r\n","import React from \"react\";\r\nimport RecentNote from \"./RecentNote\";\r\n\r\nconst RecentNotes = ({ noteLists, editNoteHandler, activeNoteId }) => {\r\n    return (\r\n        <div className=\"card w-100 overflow-recentNotes\">\r\n            <ul className=\"list-group list-group-flush\">\r\n                {noteLists.map((noteList) => (\r\n                    <RecentNote\r\n                        key={noteList.id}\r\n                        noteList={noteList}\r\n                        editNoteHandler={editNoteHandler}\r\n                        activeNoteId={activeNoteId}\r\n                    />\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RecentNotes;\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport RecentNotes from \"./RecentNotes\";\r\n\r\nconst Navbar = ({ addNoteHandler, noteLists, editNoteHandler, activeNoteId }) => {\r\n    return (\r\n        <div>\r\n            <Header addNoteHandler={addNoteHandler} />\r\n            <RecentNotes\r\n                noteLists={noteLists}\r\n                editNoteHandler={editNoteHandler}\r\n                activeNoteId={activeNoteId}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nconst Content = ({ saveNoteHandler, activeNote, deleteNoteHandler }) => {\r\n    const [title, setTitle] = useState(\"New Note\");\r\n    const [note, setNote] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        // Check if editing note, then give value from db\r\n        if (activeNote) {\r\n            setTitle(activeNote[0].title);\r\n            setNote(activeNote[0].note);\r\n        } else {\r\n            setTitle(\"New Note\");\r\n            setNote(\"\");\r\n        }\r\n    }, [activeNote]);\r\n\r\n    const saveNote = () => {\r\n        // Generate Date\r\n        let time = new Date(new Date().toString().split(\"GMT\")[0] + \" UTC\")\r\n            .toISOString()\r\n            .split(\".\")[0]\r\n            .replace(\"T\", \" \");\r\n\r\n        saveNoteHandler({\r\n            title,\r\n            note,\r\n            date: time,\r\n        });\r\n    };\r\n\r\n    // Check if editing note, then show the delete button\r\n    let deleteButton;\r\n    if (activeNote) {\r\n        deleteButton = (\r\n            <button type=\"button\" className=\"btn btn-sm btn-danger\" onClick={deleteNoteHandler}>\r\n                Delete\r\n            </button>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"card border-success mb-3 w-100 \">\r\n                <div className=\"card-header border-success d-flex justify-content-between align-items-center\">\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"input-title card-title my-0 mr-3 h5\"\r\n                        value={title}\r\n                        onChange={(e) => setTitle(e.target.value)}\r\n                    />\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-sm btn-primary mr-2\"\r\n                        onClick={saveNote}\r\n                    >\r\n                        Save\r\n                    </button>\r\n                    {deleteButton}\r\n                </div>\r\n                <div className=\"card-body text-dark overflow-content\">\r\n                    <textarea\r\n                        className=\"input-textarea\"\r\n                        value={note}\r\n                        onChange={(e) => setNote(e.target.value)}\r\n                        autoFocus\r\n                    ></textarea>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Content;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nconst Alert = ({ message }) => {\r\n    const [open, setOpen] = useState();\r\n\r\n    // Close alert handler\r\n    // SetOpen to false\r\n    const closeAlertHandler = () => {\r\n        setOpen();\r\n    };\r\n\r\n    // Will set the alert for timeout time (3000ms), and then dissappear\r\n    useEffect(() => {\r\n        setOpen(message);\r\n        setTimeout(() => {\r\n            setOpen();\r\n        }, 3000);\r\n        return () => clearTimeout(alert);\r\n    }, [message]);\r\n\r\n    let content;\r\n    if (open) {\r\n        // Set alert type and message\r\n        let messageContent, messageClass;\r\n        if (message === \"save\") {\r\n            messageContent = \"Saved successfully!\";\r\n            messageClass = \"alert alert-success alert-dismissible fade show\";\r\n        } else if (message === \"delete\") {\r\n            messageContent = \"Deleted successfully!\";\r\n            messageClass = \"alert alert-warning alert-dismissible fade show\";\r\n        } else if (message === \"error\") {\r\n            messageContent = \"Something went wrong!\";\r\n            messageClass = \"alert alert-danger alert-dismissible fade show\";\r\n        }\r\n\r\n        content = (\r\n            <div className={messageClass} role=\"alert\">\r\n                {messageContent}\r\n                <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\" onClick={closeAlertHandler}>\r\n                        &times;\r\n                    </span>\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n    return <div>{content}</div>;\r\n};\r\n\r\nexport default Alert;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./components/navbar/Navbar\";\nimport Content from \"./components/content/Content\";\nimport Alert from \"./components/UI/Alert\";\n\nfunction App() {\n    const [noteBar, setNoteBar] = useState(false);\n    const [noteLists, setNoteLists] = useState([]);\n    const [activeNote, setActiveNote] = useState();\n    const [activeNoteId, setActiveNoteId] = useState();\n    const [alert, setAlert] = useState();\n\n    const apiUrl = \"https://note-app-9a9fe.firebaseio.com\";\n\n    // Add note handler\n    const addNoteHandler = () => {\n        setNoteBar(true);\n        setActiveNote();\n        setActiveNoteId();\n    };\n\n    // Save note handler\n    const saveNoteHandler = (notes) => {\n        fetch(`${apiUrl}/notes.json`, {\n            method: \"POST\",\n            body: JSON.stringify(notes),\n            headers: { \"Content-Type\": \"application/json\" },\n        })\n            .then(() => {\n                setAlert();\n                setNoteBar(false);\n                setAlert(\"save\");\n            })\n            .catch((error) => setAlert(\"error\"));\n    };\n\n    // Edit note handler\n    const editNoteHandler = (id) => {\n        let noteDetail = noteLists.filter((noteList) => {\n            return noteList.id === id;\n        });\n        setActiveNoteId(id);\n        setActiveNote(noteDetail);\n        setNoteBar(true);\n    };\n\n    // Save after editing note handler\n    const saveEditNoteHandler = (notes) => {\n        fetch(`${apiUrl}/notes/${activeNoteId}.json`, {\n            method: \"PATCH\",\n            body: JSON.stringify(notes),\n            headers: { \"Content-Type\": \"application/json\" },\n        })\n            .then(() => {\n                setAlert();\n                setAlert(\"save\");\n            })\n            .catch((error) => setAlert(\"error\"));\n    };\n\n    // Delete note\n    const deleteNoteHandler = () => {\n        fetch(`${apiUrl}/notes/${activeNoteId}.json`, {\n            method: \"DELETE\",\n            headers: { \"Content-Type\": \"application/json\" },\n        })\n            .then(() => {\n                setAlert();\n                setNoteBar(false);\n                setActiveNote();\n                setActiveNoteId();\n                setAlert(\"delete\");\n            })\n            .catch((error) => setAlert(\"error\"));\n    };\n\n    // Get notes\n    useEffect(() => {\n        fetch(`${apiUrl}/notes.json?orderBy=\"date\"&startAt=0`)\n            .then((response) => response.json())\n            .then((data) => {\n                const updatedNoteLists = [];\n                for (const key in data) {\n                    updatedNoteLists.push({\n                        id: key,\n                        title: data[key].title,\n                        note: data[key].note,\n                        date: data[key].date,\n                    });\n                }\n                // SetNoteList with reverse order, higher date will appear first\n                setNoteLists(updatedNoteLists.reverse());\n            })\n            .catch((error) => setAlert(\"error\"));\n    }, [alert]);\n\n    // Check if content bar is open\n    let contentBar;\n    if (noteBar) {\n        // Check if content bar is new or edit mode\n        let saveNoteFunction;\n        activeNoteId\n            ? (saveNoteFunction = saveEditNoteHandler)\n            : (saveNoteFunction = saveNoteHandler);\n\n        contentBar = (\n            <Content\n                saveNoteHandler={saveNoteFunction}\n                activeNote={activeNote}\n                deleteNoteHandler={deleteNoteHandler}\n            />\n        );\n    }\n\n    return (\n        <div className=\"App\">\n            <div className=\"container-fluid py-3\">\n                <div className=\"row\">\n                    <div className=\"col-md-4 mb-3 mb-md-0\">\n                        <Navbar\n                            addNoteHandler={addNoteHandler}\n                            noteLists={noteLists}\n                            editNoteHandler={editNoteHandler}\n                            activeNoteId={activeNoteId}\n                        />\n                    </div>\n                    <div className=\"col-md-8\">{contentBar}</div>\n                </div>\n            </div>\n\n            {/* ALERT NOTIFICATION */}\n            <Alert message={alert} />\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}